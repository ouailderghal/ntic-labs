---
- hosts: lab4
  user: debian
  become: yes

  roles:
    - role: gantsign.keyboard
      keyboard_model: pc105
      keyboard_layout: fr

  pre_tasks:
    - name: x
      tags: x
      debug:
        var: " {{ ansible_facts['default_ipv4']['interface'] }} "

    - name: Set hostname
      tags: hostname
      hostname: name="{{ hostname }}"

    - name: SYSTEM UPDATE AND UPGRADE
      tags: update,upgrade
      block:
        - name: Copy sources.list file
          tags: sources.list
          copy:
            src: ./config/apt/sources.list
            dest: /etc/apt/sources.list
            owner: root
            group: root
            backup: yes

        - name: Update cache and full system upgrade
          tags: update,upgrade,cache_update
          apt:
            update_cache: yes
            upgrade: dist
            cache_valid_time: 3600
            force_apt_get: yes

    - name: DATE AND TIME CONFIGURATION
      tags: datetime
      block:
        - name: Set timezone to Africa/Algiers
          tags: timezone
          timezone: name=Africa/Algiers

        - name: Install NTP
          tags: ntp
          apt: name=ntp state=present

        - name: Enable and run NTP service
          tags: ntp
          service: name=ntp state=started enabled=yes

    - name: Copy bash configuration
      tags: bash,bashrc
      copy:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        owner: root
        group: root
        backup: yes
      with_items:
        - { src: ./config/bash/skel.bash, dest: /etc/skel/.bashrc }
        - { src: ./config/bash/skel.bash, dest: /etc/bash.bashrc }

    - name: XFCE CONFIGURATION
      tags: xfce
      block:
        - name: Remove light-locker
          apt: name=light-locker state=absent

        - name: Disable xflock4 command
          shell:
            cmd: "mv /usr/bin/xflock4 /usr/bin/xflock4.bk"
          ignore_errors: yes

        - name: Remove old XFCE configuration files
          file:
            path: "{{ item }}"
            state: absent
          with_items:
            - /opt/xfce4
            - /opt/xfce4.zip

        - name: Copy xfce4 and autostart configuration files
          copy:
            src: "{{ item }}"
            dest: /opt/
            owner: root
            group: root
          with_items:
            - ./config/xfce4
            - ./config/autostart

        - name: Copy wallpaper
          copy:
            src: ./config/wallpapers/ntic-wallpaper.jpg
            dest: /usr/share/backgrounds/xfce/
            owner: root
            group: root
            mode: 0644

  tasks:
    - name: CONKY CONFIGURATION
      tags: conky
      block:
        - name: Install Conky
          apt:
            name:
              - conky
              - conky-all
            state: present

        - name: Copy Conky configuration file
          template:
            src: ./templates/conky.conf.j2
            dest: /etc/conky/conky.conf
            owner: root
            group: root
            mode: '0644'

    - name: ZABBIX AGENT
      tags: zabbix
      block:
        - name: Add Zabbix repository
          apt:
            deb: "https://repo.zabbix.com/zabbix/6.2/debian/pool/main/z/zabbix-release/zabbix-release_6.2-1%2Bdebian11_all.deb"

        - name: Update cache
          apt:
            update_cache: yes
            cache_valid_time: 3600
            force_apt_get: yes

        - name: Install Zabbix Agent
          apt:
            name:
              - zabbix-agent2
              - zabbix-agent2-plugin-mongodb
            state: present

        - name: Copy Zabbix Agent configuration file
          template:
            src: ./templates/zabbix_agent2.conf.j2
            dest: /etc/zabbix/zabbix_agent2.conf
            owner: root
            group: root
            mode: '0644'

        - name: Allow Zabbix agent port through firewall
          ufw:
            rule: allow
            port: 10050
            proto: tcp

    - name: USER CREATION (ADMINISTRATOR, GUEST)
      tags: users
      block:
        - name: Copy BASH configuration file
          tags: bash,bashrc
          copy:
            src: "{{ item.src }}"
            dest: "{{ item.dest }}"
            owner: root
            group: root
            backup: yes
          with_items:
            - { src: ./config/bash/skel.bash, dest: /etc/skel/.bashrc }
            - { src: ./config/bash/skel.bash, dest: /etc/bash.bashrc }

        - name: Create guest user
          tags: guest_user
          user:
            name: guest
            comment: guest
            uid: 1040
            shell: /bin/bash
            home: /home/guest/
            password: "$6$f.3g1cc1i/7KZNfc$T0.svXQuiNVwEA91XzINK1MjVtOy80/aJTCcgPNoSVqTDxZGm1559uGS5i.H1xPPcrU4KldAbQjXyseqtMqsx1"
            skeleton: no
            state: present

        - name: Create admin user
          tags: admin
          user:
            name: admin
            comment: admin
            uid: 1050
            shell: /bin/bash
            password: "{{ admin_password }}"
            groups: sudo
            append: yes

        - name: Copy lighdm configuration file
          tags: lightdm
          copy:
            src: ./config/lightdm/lightdm.conf
            dest: /etc/lightdm/lightdm.conf
            owner: root
            group: root
            backup: yes

        - name: Enable passwordless login for sudo group
          tags: sudo
          lineinfile:
            path: /etc/sudoers
            state: present
            regexp: '^%sudo'
            line: '%sudo ALL=(ALL) NOPASSWD: ALL'
            validate: 'visudo -cf %s'

    - name: SSH CONFIGURATION
      tags: ssh
      block:
        - name: Copy SSH authorized keys for administrator user
          tags: authorized_keys
          copy:
            src: ./config/ssh/authorized_keys
            dest: /home/admin/.ssh/
            owner: admin
            group: admin
            mode: 0644

    - name: FIREWALL CONFIGURATION
      tags: firewall,ufw
      block:
        - name: Install ufw firewall
          apt: name=ufw state=present

        - name: Enable and start firewall service
          service: name=ufw state=started enabled=yes

        - name: Enable firewall and deny incoming requests
          ufw: state=enabled policy=deny logging=on

        - name: Allow OpenSSH service through firewall
          ufw: rule=allow name=OpenSSH

        - name: Allow TCP developement ports
          ufw:
            rule: allow
            port: 8000:8005
            proto: tcp

        - name: Allow UDP developement ports
          ufw:
            rule: allow
            port: 8000:8005
            proto: udp

    - name: NETWORKING TOOLS INSTALLATION
      tags: networking
      block:
        - name: Copy packettracer.deb file
          tags: packettracer
          copy:
            src: ./packages/packettracer.deb
            dest: /home/admin/
            owner: admin
            group: admin
            mode: 0664

        - name: Install packettracer.deb
          tags: packettracer
          apt: deb=/home/admin/packettracer.deb
          ignore_errors: yes

        - name: Install WireShark
          tags: wireshark
          apt: name=wireshark state=present

        - name: Add wireshark group
          tags: wireshark
          group: name=wireshark state=present

        - name: Add guest user to wireshark group
          tags: wireshark
          user:
            name: guest
            groups: wireshark
            append: yes

        - name: Wireshark setuid
          ansible.builtin.debconf:
            name: wireshark-common
            question: wireshark-common/install-setuid
            value: yes
            vtype: boolean
          register: reconfigure_changed

        - name: Make debconf changes active for Wireshark
          ansible.builtin.command:
            cmd: "dpkg-reconfigure wireshark-common"
          environment:
            DEBIAN_FRONTEND: noninteractive
          when: reconfigure_changed.changed

    - name: JAVA DEVELOPEMENT TOOLS INSTALLATION
      tags: java
      block:
        - name: Install OpenJDK 17
          apt:
            name:
              - openjdk-17-jdk
              - openjdk-17-jre
              - openjdk-17-doc
              - openjdk-17-demo
              - openjdk-17-dbg
            state: present

        - name: Copy eclipse.tar.gz file
          tags: eclipse
          copy:
            src: ./packages/eclipse.tar.gz
            dest: /home/admin/
            owner: admin
            group: admin
            mode: 0664

        - name: Unarchive eclipse.tar.gz file into /opt
          tags: eclipse
          unarchive:
            src: /home/admin/eclipse.tar.gz
            dest: /opt
            remote_src: yes

        - name: Copy eclipse.desktop application launcher
          tags: eclipse
          copy:
            src: ./config/eclipse/eclipse.desktop
            dest: /usr/share/applications
            owner: root
            group: root
            mode: 0776

    - name: Install C developement tools
      tags: c
      apt:
        name:
          - make
          - build-essential
          - codeblocks
        state: present

    - name: PHP & APAHCE WEB SERVER
      tags: php
      block:
        - name: Install PHP and required modules
          apt:
            name:
              - php
              - php-zip
              - php-yaml
              - php-mysql
              - php-ldap
              - php-bcmath
              - php-mbstring
              - php-gd
              - php-pdo
              - php-xml
              - php-sqlite3
              - libapache2-mod-php
            state: present

        - name: Install Apache2 server
          apt: name=apache2 state=present

        - name: Enable and run Apache2 service
          service: name=apache2 state=started enabled=yes

    - name: Install Microsoft Visual Studio Code
      tags: vscode
      block:
        - name: Copy vscode.deb file
          copy:
            src: ./packages/vscode.deb
            dest: /home/admin/
            owner: admin
            group: admin
            mode: 0664

        - name: Install vscode.deb
          apt: deb=/home/admin/vscode.deb
          ignore_errors: yes

    - name: PURGE GUEST DATA
      tags: purge
      block:
        - name: Copy purge home script and service file
          copy:
            src: "{{ item.src }}"
            dest: "{{ item.dest }}"
            owner: root
            group: root
            mode: 0700
          with_items:
            - { src: ./scripts/purge_guest_home.sh, dest: /scripts/ }
            - { src: ./config/services/purge-guest-home.service, dest: /etc/systemd/system/ }

        - name: Enable purge guest home service
          systemd:
            state: started
            enabled: yes
            daemon_reload: yes
            name: purge-guest-home.service

        - name: disable cron job for purging guest home directory
          cron:
            name: "a job for purging guest home folder on reboot"
            special_time: reboot
            job: "/scripts/purge_home.sh"
            state: absent

        - name: Remove old purge script
          file:
            path: /scripts/purge_home.sh
            state: absent

    - name: GRUB CONFIGURATION
      tags: grub
      block:
        - name: Copy grub configuration file
          copy:
            src: ./config/grub/grub.cfg
            dest: /etc/default/grub
            owner: root
            group: root
            backup: yes

        - name: Launch update-grub
          shell:
            cmd: "update-grub"

    - name: Install extra utilities
      tags: extra
      apt:
        name:
          - htop
          - neofetch
          - tree
          - vim
          - git
          - gitg
          - vlc
          - chromium
          - gimp
          - inkscape
          - mypaint
          - filezilla
          - numlockx
          - dosbox
          - zip
          - unzip
        state: present

